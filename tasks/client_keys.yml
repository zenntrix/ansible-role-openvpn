# generate client keys
---
- set_fact:
    additional_certs_to_revoke: "{{ _additional_certs_to_revoke.stdout_lines | default([]) }}"
    additional_certs_to_add: "{{ _additional_certs_to_add.stdout_lines | default([]) }}"

- name: Create openvpn ovpn file directory
  file:
    path: "{{openvpn_ovpn_dir}}"
    state: directory

- name: Copy openssl client extensions
  copy:
    src: openssl-client.ext
    dest: "{{openvpn_key_dir}}"
    owner: root
    group: root
    mode: 0400

- debug: msg={{ additional_certs_to_add }}


- name: Generate CA (cert & key)
  
  vars:
    crt_rsa_bits: "{{openvpn_rsa_bits}}"
    crt_cn: "{{openvpn_ca_cn}}"
    crt_dir: "{{openvpn_key_dir}}"
    crt_name: ca
    crt_ca_passphrase: False
    crt_external_sign_handler: "{{ openvpn_sign_ca_csr_handler | default(False) }}"
    crt_selfsign: "{% if crt_external_sign_handler %}False{% else %}True{% endif %}"
  when: openvpn_ca_key is not defined


- name: generate client key
  import_tasks: "{{ role_path }}/tasks/generate_key_and_sign_cert.yml"
  vars:
    crt_rsa_bits: "{{openvpn_rsa_bits}}"
    crt_cn: "{{ item }}"
    crt_dir: "{{openvpn_key_dir}}"
    crt_name: "{{ item }}"    
    #crt_ca: ca.crt
    #crt_ca_key: ca-key.pem
    #crt_ca_passphrase: "{{ openvpn_ca_key.passphrase | default(False) }}"
    crt_external_sign_handler: "{{ openvpn_sign_client_csr_handler | default(False) }}"
    crt_selfsign: False
  with_items:
    - "{{ clients }}"
    - "{{ additional_certs_to_add }}"

- name: protect client keys
  file:
    path: "{{openvpn_key_dir}}/{{item}}.key"
    mode: 0400
  with_items:
    - "{{clients}}"
    - "{{ additional_certs_to_add }}"

- name: sign client key
  command: >-
    openssl x509 
      -req 
      -in {{item}}.csr 
      -out {{item}}.crt 
      -CA ca.crt 
      -CAkey ca-key.pem 
      -sha256 
      -days 3650 
      -extfile openssl-client.ext
      {% if openvpn_ca_key.passphrase is defined %}-passin 'pass:{{openvpn_ca_key.passphrase}}'{% endif %}
  no_log: "{{ openvpn_ca_key.passphrase is defined }}"
  args:
    chdir: "{{openvpn_key_dir}}"
    creates: "{{item}}.crt"
  with_items:
    - "{{clients}}"
    - "{{ additional_certs_to_add }}"


- name: register server ca key
  slurp:
    src: "{{openvpn_key_dir}}/ca.crt"
  register: ca_cert

- name: register tls-auth key
  slurp:
    src: "{{openvpn_key_dir}}/ta.key"
  register: tls_auth

- name: register client certs
  slurp:
    src: "{{openvpn_key_dir}}/{{item}}.crt"
  with_items:
    - "{{clients}}"
    - "{{ additional_certs_to_add }}"
  register: client_certs

- name: register client keys
  slurp:
    src: "{{openvpn_key_dir}}/{{item}}.key"
  with_items:
    - "{{clients}}"
    - "{{ additional_certs_to_add }}"
  register: client_keys

- name: generate client config
  template:
    src: client.ovpn.j2
    dest: "{{ openvpn_ovpn_dir }}/{{item.0.item}}-{{inventory_hostname}}.ovpn"
    owner: root
    group: root
    mode: 0400
  with_together:
    - "{{client_certs.results}}"
    - "{{client_keys.results}}"

- name: fetch client config
  fetch:
    src: "{{ openvpn_ovpn_dir }}/{{item}}-{{inventory_hostname}}.ovpn"
    dest: "{{ openvpn_fetch_config_dir }}/{{item}}/{{inventory_hostname}}{{config_fetch_suffix | default('')}}.ovpn"
    flat: yes
  with_items:
    - "{{clients}}"
    - "{{ additional_certs_to_add }}"
